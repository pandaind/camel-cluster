server.port = 8441


# the name of Camel
camel.springboot.name = Cluster-Node


timer.period = 5s

node.id = ${random.uuid}

# to automatic shutdown the JVM after a period of time
#camel.springboot.duration-max-seconds=60
#camel.springboot.duration-max-messages=100

# add for example: &repeatCount=5 to the timer endpoint to make Camel idle
#camel.springboot.duration-max-idle-seconds=15

# expose actuator endpoint via HTTP
management.endpoints.web.exposure.include=info,health,camelroutes

# turn on actuator health check
management.endpoint.health.enabled = true

# allow to obtain basic information about camel routes (read only mode)
management.endpoint.camelroutes.enabled = true
management.endpoint.camelroutes.read-only = true

# to configure logging levels
#logging.level.org.springframework = INFO
#logging.level.org.apache.camel.spring.boot = INFO
#logging.level.org.apache.camel.impl = DEBUG
#logging.level.sample.camel = DEBUG


camel.clustered.controller.enabled = true
camel.clustered.controller.namespace = camel
camel.clustered.controller.initial-delay = 5s

camel.clustered.controller.routes.heartbeat.clustered = false

camel.component.atomix.cluster.service.enabled = true
camel.component.atomix.cluster.service.mode = client
camel.component.atomix.cluster.service.nodes = localhost:8444
camel.component.atomix.cluster.service.id = ${node.id}